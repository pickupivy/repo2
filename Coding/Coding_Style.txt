PC_Cam_Firmware_Coding_Style
头文件由预处理块，结构体声明和函数声明组成。

头文件中只存放“声明”，而不存放“定义”。

定义文件中不要有函数和数据的声明。

代码中每个逻辑段落之间应该用一个空行分割开。

一行代码只做一件事情，如只定义一个变量，或只写一条语句。

关键字之后要留空格。如if、for、while、const、case等等；函数名之后不要留空格，紧跟”(”；“(”向后紧跟，“)”、“，”、“；”向前紧跟，紧跟处不留空格。

赋值操作符、比较操作符、算术操作符、逻辑操作符等二元操作符的前后应当加空格。

一元操作符如“!”、“~”、“++”、“--”、“&”等前后不加空格。

条件编译（#if，#ifdef，#ifndef，#else，#elseif，#defined等）顶头写。

代码行最大长度宜控制在80个字符以内，接近或超过80个字符要拆行写，拆行后要相对当前代码行缩进2个Tab键。长表达式要在低优先级操作符处拆分成新行，操作符放在新行之首。

函数体内的注释都用“//”注释，不要使用“/* */”。

函数内的注释不可太多，注释只是用来说明你的代码在做什么，而不是说明怎么做的。复杂的结构体定义比函数更需要注释。

全局变量前面加上g_，例如：U8 g_byValue; 
如果是定义成code型的全局常量，需要在前面加gc_，例如：U8 code gc_byValue；
数组命名前面加上a，例如U8 abyArray[10]；
全局变量数组例如U8 g_abyArray[10]；
指针命名前面加上p，例如U8 *pPtr；
本文件内的全局变量前面加上l_；
函数内的静态变量前面加上s_；
结构体的命名后面加上_t，结构体变量定义前面加上t，如果是全局变量前面加上g_t，例如IQTABLE_t tIQ_Table。

函数命名尽量使用“动词”或者“动词+名词”。采用大小写混排方式，每个单词或缩写的单词的第一个字母大写，单词的其它字母小写，例如SetValue()。

条件编译的宏定义，前后都加上“_”。例如#define _IC_CODE_。

宏定义如是一个表达式，前后都要用括号括起来，如果有参数每个参数也都需要用括号括起来。如#define F(x, y) ((x)+(y))；简单的语句，且经常会用到的语句，或者有可能需要改写的语句，写成宏定义反而易懂且方便修改。因为语句简单写成函数反而不划算，函数调用会增加执行时间。如
#define POWER_ON_SV18()(XBYTE[SV18_PWR_CTL] &= (~0x01))
#define TURN_LED_ON()GPIO_L_DRIVE_HIGH(7)。

变量的数据类型要根据实际需要的精度来定义，使用越小精度的数据类型，code size越小，且执行速度也越快。尽可能不要使用float数据类型的变量。但是要避免变量的精度不够，导致溢出。

实现一个函数只是为了做好一件事情，不要把函数设计成用途广泛、面面俱到的，这样的函数肯定会超长，而且往往不可重用，维护困难。

除非特殊情况，.h文件避免出现include其他.h。

变量名的前面还需加上变量类型的缩写，缩写字母小写，如下：
U8	byOldValue；
S8	sbyNewValue；
U16	wCurrentValue；
S16	swValue；
U32	dwValue；
S32	sdwValue；
float	fValue;
bit 	bValue;
